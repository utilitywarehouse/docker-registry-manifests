apiVersion: v1
kind: Service
metadata:
  annotations:
    ingress.kubernetes.io/affinity: "true"
    traefik.backend.loadbalancer.stickiness: "true"
  labels:
    name: docker-registry-frontend
  name: docker-registry-frontend
spec:
  selector:
    app: docker-registry-frontend
  ports:
    - name: frontend
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: docker-registry-frontend
spec:
  serviceName: docker-registry-frontend
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry-frontend
  template:
    metadata:
      name: docker-registry-frontend
      labels:
        app: docker-registry-frontend
    spec:
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      initContainers:
        # merge sensitive values with the rest of the frontend config; this allows
        # passwords and tokens to be stored in an encrypted form while the rest
        # of the config remains readable
        - name: merge-config
          image: mikefarah/yq:3.4.1
          command:
            - sh
            - -c
            - |
              yq m /workdir/config/config.yml /workdir/secret-config/config.yml > /config/config.yml
          volumeMounts:
            - name: merged-frontend-config
              mountPath: /config
            - name: frontend-config
              mountPath: /workdir/config
            - name: frontend-config-secret
              mountPath: /workdir/secret-config
      containers:
        - name: nginx
          image: nginx:1.15-alpine
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          resources:
            requests:
              cpu: 0m
              memory: 0Mi
            limits:
              cpu: 4000m
              memory: 128Mi
          command:
            - /usr/sbin/nginx
            - -c
            - /etc/nginx.docker-registry-ui/nginx.conf
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx.docker-registry-ui
              readOnly: true
        - name: oauth
          image: quay.io/oauth2-proxy/oauth2-proxy:v6.0.0
          env:
            - name: OAUTH2_PROXY_SET_XAUTHREQUEST
              value: "true"
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
            limits:
              cpu: 250m
              memory: 100Mi
          ports:
            - containerPort: 4180
        - name: docker-registry-frontend
          image: quay.io/utilitywarehouse/docker-registry-ui:0.9.3-patch.0
          args:
            - -config-file=/var/docker-registry-ui/config.yml
          resources:
            requests:
              cpu: 0m
              memory: 4Mi
            limits:
              cpu: 100m
              memory: 128Mi
          ports:
            - name: frontend
              containerPort: 8000
          volumeMounts:
            - mountPath: /opt/data
              name: frontend-data
            - mountPath: /var/docker-registry-ui
              name: merged-frontend-config
      volumes:
        - name: nginx-config
          configMap:
            name: registry-frontend
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: merged-frontend-config
          emptyDir: {}
        - name: frontend-config
          configMap:
            name: registry-frontend
            items:
              - key: config.yml
                path: config.yml
        - name: frontend-config-secret
          secret:
            secretName: registry-frontend
  volumeClaimTemplates:
    - metadata:
        name: frontend-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
